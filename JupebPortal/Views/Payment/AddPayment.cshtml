@model JupebPortal.Models.Payment
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration;

    
<style type="text/css">
    .button {
            
        border: none;
        color: white;
        padding: 15px 32px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        margin: 4px 2px;
        cursor: pointer;
        border-radius: 4px;
    }

    input {
        max-width: 30%;
    }
</style>

<br />
    <h4>Payment Details</h4>
<hr />


<div class="container mt-3">
        
    <form onsubmit="makePayment()" id="payment-form">
        <div class="form-floating mt-3 mb-3">
            <input type="text" class="form-control" id="js-transactionId" name="transactionId" value=""  hidden>
            <label for="pwd">Transaction Id</label>
        </div>
        <div class="form-floating mb-3 mt-3">
                <input type="text" class="form-control" id="js-firstName" placeholder="Enter First Name" name="firstName" value="@ViewBag.FirstName" readonly>
            <label for="email">First Name</label>
        </div>
        <div class="form-floating mb-3 mt-3">
                <input type="text" class="form-control" id="js-lastName" placeholder="Enter Last Name" name="lastName" value="@ViewBag.LastName" readonly>
            <label for="email">Last Name</label>
        </div>
        <div class="form-floating mb-3 mt-3">
                <input type="text" class="form-control" id="js-email" placeholder="Enter Email" name="email" value="@ViewBag.Email" readonly>
            <label for="email">Email</label>
        </div>
        <div class="form-floating mt-3 mb-3">
                <input type="text" class="form-control" id="js-narration" placeholder="Enter Narration" name="narration" value="@ViewBag.Purpose" readonly>
            <label for="pwd">Narration</label>
        </div>
        <div class="form-floating mt-3 mb-3">
            <input type="text" class="form-control" id="js-amount" placeholder="Enter Amount" name="amount" value="@ViewBag.Amount" readonly>
            <label for="pwd">Amount</label>
        </div>
            
        <p class="text-sm-start text-info">Note that payment attracts transaction charges.</p>
        <input type="button" onclick="makePayment()" value="Submit" button class="button btn btn-primary shadow-sm" />

    </form>
        
    <br />
    <br />
</div>
@{
    string publicKey = Configuration.GetSection("Remita:PublicKey").Value;
    string remitaScript = Configuration.GetSection("Remita:BasePayUrl").Value;
}
<script type="text/javascript" src="@remitaScript"></script>
<script>
    function makePayment() {
        var form = document.querySelector("#payment-form");
        $.ajax({
            url: '/payment/savetransactionid',
            type: 'POST',
            success: function (data) {
                console.log('Generated transaction ID', data);
                $('#js-transactionId').val(data);
                makeRequest(form);
            },
            error: function (error) {
                console.log('Error generating transaction ID', error);
            }
        });
    }
        
    function makeRequest(form) {

        var paymentEngine = RmPaymentEngine.init({

            key: "@publicKey",
            transactionId: form.querySelector('input[name="transactionId"]').value,
            channel: "CARD,USSD,QR,PAYWITHREMITA,PHONENUMBER,WALLET,ENAIRA,BANK,IBANK,BRANCH",
            customerId: form.querySelector('input[name="email"]').value,
            firstName: form.querySelector('input[name="firstName"]').value,
            lastName: form.querySelector('input[name="lastName"]').value,
            email: form.querySelector('input[name="email"]').value,
            amount: form.querySelector('input[name="amount"]').value,
            narration: form.querySelector('input[name="narration"]').value,
            onSuccess: function (response) {
                console.log('callback Successful Response', response);
                $.ajax({
                    url: '/payment/success',
                    type: 'POST',
                    data: response,
                    success: function (data) {
                        console.log('Payment saved to database', data);
                        window.location.href = '/ApplicationForm/Create';
                    },
                    error: function (error) {
                        console.log('Error saving payment to database', error);
                    }
                });
            },
            onError: function (response) {
                console.log('callback Error Response', response);

            },
            onClose: function () {
                console.log("closed");
            }
        });
        paymentEngine.showPaymentWidget();
    }

    
</script>



